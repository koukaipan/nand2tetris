// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
	/* readLoad = reset | load | inc */
	Or(a=reset, b=load, out=or2);
	Or(a=or2, b=inc, out=realLoad);

	/* realIn = reset&false + in&load&(!reset) + incIn&inc&(!load&!reset) */
	/* case1: reset&false = 0 */
	/* case2: case2Sel = in&(!reset) */
	Not(in=reset, out=notRst);
	And(a=load, b=notRst, out=case2Sel);
	Mux16(a=false, b=in, sel=case2Sel, out=x2);
	/* case3: case3Sel = inc&!(load|reset) */
	Or(a=load, b=reset, out=t1);
	Not(in=t1, out=t2);
	And(a=inc, b=t2, out=case3Sel);
	Inc16(in=tmpOut, out=incIn);
	Mux16(a=false, b=incIn, sel=case3Sel, out=x3);

	/* realIn = x1(0) + x2 + x3 */
	Or16(a=x2, b=x3, out=realIn);

	Register(in=realIn, load=realLoad, out=tmpOut);
	Or16(a=false, b=tmpOut, out=out);
}
